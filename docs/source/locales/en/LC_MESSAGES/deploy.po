# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, NtechLab
# This file is distributed under the same license as the FindFace Security
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: FindFace Security 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-25 17:51+0700\n"
"PO-Revision-Date: 2018-10-25 17:55+0700\n"
"Last-Translator: \n"
"Language: en\n"
"Language-Team: \n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"
"X-Generator: Poedit 2.1.1\n"

#: ../source/deploy.rst:5
msgid "Пошаговое развертывание"
msgstr "Deploy Step-By-Step"

#: ../source/deploy.rst:7
msgid ""
"Данный раздел содержит сведения о пошаговом развертывании компонентов FindFace "
"Security. Выполните приведенные ниже инструкции, придерживаясь заданного "
"порядка."
msgstr ""
"This section will guide you through the FindFace Security step-by-step "
"deployment process. Follow the instructions below minding the sequence."

#: ../source/_inclusions/prepare_install.rst:4
msgid ""
"Перед развертыванием FindFace Security убедитесь, что корректно выставлены "
"системное время и часовой пояс, а также включена синхронизация времени через "
"``ntpd``/``systemd-timesyncd``. При эксплуатации FindFace Security не "
"допускайте резких скачков времени, чтобы исключить проблемы с "
"работоспособностью сервисов после перезагрузки."
msgstr ""
"Before deploying FindFace Security, make sure that the system time and time "
"zone are correct, and time synchronization via ``ntpd``/``systemd-timesyncd`` "
"is enabled. When using FindFace Security, avoid any sudden changes in time, as "
"they may result in unavailability of the FindFace Security services after "
"reboot."

#: ../source/_inclusions/prepare_install.rst:7
msgid ""
"Предварительно ознакомьтесь с разделами :ref:`requirements` и :ref:"
"`architecture`."
msgstr "See :ref:`requirements` and :ref:`architecture`."

#: ../source/deploy.rst:13
msgid "В этом разделе:"
msgstr "In this section:"

#: ../source/deploy.rst:20
msgid "Подготовка deb-пакетов к установке"
msgstr "Prepare Packages for Installation"

#: ../source/deploy.rst:22
msgid ""
"Для того чтобы подготовить deb-пакеты FindFace Security к установке, выполните "
"следующие действия:"
msgstr ""
"To prepare the FindFace Security deb-packages for installation, do the "
"following:"

#: ../source/deploy.rst:24
msgid "Распакуйте пакет с компонентами."
msgstr "Unpack the package with components."

#: ../source/deploy.rst:30
msgid "Добавьте ключ подписи."
msgstr "Add a signature key."

#: ../source/deploy.rst:37
msgid "Распакуйте пакеты с моделями нейронных сетей."
msgstr "Unpack the packages with the neural network models."

#: ../source/deploy.rst:45
msgid "Установка необходимого стороннего ПО"
msgstr "Prerequisites"

#: ../source/deploy.rst:47
msgid ""
"Для работы базовой конфигурации FindFace Security необходима система управления "
"базами данных :program:`PostgreSQL` и сетевое хранилище :program:`Redis`. "
"Установите их из репозитория Ubuntu:"
msgstr ""
"The FindFace Security basic configuration requires :program:`PostgreSQL` and :"
"program:`Redis`. Install them from the Ubuntu repository as such:"

#: ../source/deploy.rst:54
msgid ""
"Для работы модуля биометрической видео-идентификации необходимо распределенное "
"хранилище ключей :program:`ETCD`, также устанавливаемое из репозитория Ubuntu."
msgstr ""
"The FindFace Security video-based biometric identification requires :program:"
"`ETCD` also installed from the Ubuntu repository:"

#: ../source/deploy.rst:63
msgid "Установка сервера лицензий NTLS"
msgstr "Licensing"

#: ../source/deploy.rst:65
msgid ""
"Вы получаете файл лицензии вместе с установочными пакетами FindFace Security. "
"Для лицензирования в закрытой сети вам также будет предоставлен ключ аппаратной "
"защиты Guardant."
msgstr ""
"You receive a license file from your NTechLab manager along with the FindFace "
"Security distributable packages. For on-premise licensing, you will be also "
"provided with a Guardant USB dongle."

#: ../source/deploy.rst:67
msgid ""
"Для того чтобы установить и настроить сервер лицензий NTLS, выполните следующие "
"действия:"
msgstr "To install and configure the license server (NTLS), do the following:"

#: ../source/deploy.rst:69
msgid "Установите компонент NTLS:"
msgstr "Install the NTLS component:"

#: ../source/deploy.rst:77
msgid ""
"В файле конфигурации NTLS вы можете изменить папку для хранения файла лицензии "
"и настроить удаленный доступ к веб-интерфейсу NTLS, используемому для "
"управления лицензией. Для того чтобы открыть файл конфигурации NTLS, выполните "
"команду::"
msgstr ""
"In the NTLS configuration file, you can change the license folder and the NTLS "
"web interface remote access settings. To open the NTLS configuration file, "
"execute::"

#: ../source/deploy.rst:81
msgid ""
"При необходимости укажите в параметре ``license-dir`` другую папку для хранения "
"файла лицензии. По умолчанию файл лицензии хранится в папке ``/ntech/license``::"
msgstr ""
"If necessary, change the license folder in the ``license-dir`` parameter. By "
"default, license files are stored at ``/ntech/license``::"

#: ../source/deploy.rst:85
msgid ""
"При необходимости раскомментируйте строку ``proxy`` и укажите IP-адрес прокси-"
"сервера::"
msgstr ""
"If necessary, uncomment the ``proxy`` line and specify your proxy server IP "
"address::"

#: ../source/deploy.rst:89
msgid ""
"По умолчанию доступ в веб-интерфейс NTLS возможен с любого удаленного сервера в "
"пределах сети (``ui = 0.0.0.0:3185``). Для того чтобы обеспечить доступ к веб-"
"интерфейсу NTLS только с определенного IP-адреса, отредактируйте параметр "
"``ui``::"
msgstr ""
"By default, you can access the NTLS web interface from any remote host (``ui = "
"0.0.0.0:3185``). To indicate that accessing the NTLS web interface must "
"originate from a specific IP address, edit the ``ui`` parameter::"

#: ../source/deploy.rst:93
msgid "Добавьте сервис NTLS в автозагрузку и запустите сервис:"
msgstr "Enable the NTLS service autostart and launch the service:"

#: ../source/deploy.rst:99
msgid ""
"Загрузите файл лицензии в веб-интерфейсе NTLS по адресу ``http://<IP-адрес "
"NTLS>:3185/#/``."
msgstr ""
"Upload the license file via the NTLS web interface ``http://"
"<NTLS_IP_address>:3185/#/``."

#: ../source/deploy.rst:100
msgid "В случае лицензирования в закрытой сети вставьте ключ Guardant в USB-порт."
msgstr ""
"For the on-premise licensing, insert a Guardant USB dongle into a USB port."

#: ../source/deploy.rst:106
msgid "Установка базовой конфигурации"
msgstr "Basic Configuration"

#: ../source/deploy.rst:108
msgid ""
"Установка базовой конфигурации (базы данных c необходимыми расширениями, "
"компонента ``ffsecurity`` и ``ffsecurity-ui``) выполняется следующим образом:"
msgstr ""
"The FindFace Security basic configuration includes a database, database "
"extensions, the ``ffsecurity`` and ``ffsecurity-ui`` components. To install the "
"basic configuration, do the following:"

#: ../source/deploy.rst:110
msgid ""
"Установите расширение ``findface-postgres-9.5-facen`` к :program:`PostgreSQL` "
"из пакета :program:`<ffsecurity-repo>.deb`:"
msgstr ""
"Install the ``findface-postgres-9.5-facen`` extension for :program:`PostgreSQL` "
"from the :program:`<ffsecurity-repo>.deb` package:"

#: ../source/deploy.rst:116
msgid ""
"В консоли :program:`PostgreSQL` создайте пользователя ``ntech`` и базу данных "
"``ffsecurity``. Загрузите в базу данных расширение ``findface-postgres-9.5-"
"facen`` с помощью метки ``facen-compare-bytea``."
msgstr ""
"Using the :program:`PostgreSQL` console, create a new user ``ntech`` and a "
"database ``ffsecurity``. Upload the ``findface-postgres-9.5-facen`` extension "
"to the ``ffsecurity`` database by using the ``facen-compare-bytea`` label."

#: ../source/deploy.rst:130
msgid ""
"Для выхода из консоли ``PostgreSQL`` введите ``\\q`` и нажмите :kbd:`Enter`."
msgstr ""
"To quit from the ``PostgreSQL`` console, type ``\\q`` и press :kbd:`Enter`."

#: ../source/deploy.rst:132
msgid ""
"Разрешите авторизацию в :program:`PostgreSQL` по UID  клиента сокета. "
"Перезапустите :program:`PostgreSQL`."
msgstr ""
"Allow authentication in :program:`PostgreSQL` by UID of a socket client. "
"Restart :program:`PostgreSQL`."

#: ../source/deploy.rst:140
msgid ""
"Установите компонент ``ffsecurity`` из пакета :program:`<ffsecurity-repo>.deb`."
msgstr ""
"Install the ``ffsecurity`` component from the :program:`<ffsecurity-repo>.deb` "
"package."

#: ../source/deploy.rst:143
msgid "Вместе с ``ffsecurity`` будет установлен nginx."
msgstr "NginX will be automatically installed from dependencies."

#: ../source/deploy.rst:149
msgid ""
"Установите веб-интерфейс ``ffsecurity-ui`` из пакета :program:`<ffsecurity-"
"repo>.deb`."
msgstr ""
"Install the ``ffsecurity-ui`` web interface from the :program:`<ffsecurity-"
"repo>.deb` package."

#: ../source/deploy.rst:155
msgid ""
"Откройте файл конфигурации ``/etc/ffsecurity/config.py``. В параметре "
"``EXTERNAL_ADDRESS`` укажите актуальный внешний IP-адрес или URL сервера "
"установки, по которому будет доступен веб-интерфейс. Если компоненты "
"``videomanager-api`` и/или ``extraction-api`` будут установлены на удаленных "
"серверах, укажите IP-адреса серверов в параметрах ``VIDEO_MANAGER_ADDRESS`` и/"
"или ``EXTRACTION_API`` (установка компонентов описана в разделе см. :ref:"
"`identification`). Придумайте и укажите в параметре ``VIDEO_DETECTOR_TOKEN`` "
"токен для авторизации распознавания лиц на видео. Данный токен будет "
"передаваться в задачи ``videomanager-api``."
msgstr ""
"Open the ``/etc/ffsecurity/config.py`` configuration file. In the "
"``EXTERNAL_ADDRESS`` parameter , specify the external IP address or URL that "
"will be used to access the FindFace Security web interface. If ``videomanager-"
"api`` and/or ``extraction-api`` are to be installed on remote hosts, specify "
"these hosts’ IP addresses in the ``VIDEO_MANAGER_ADDRESS`` and "
"``EXTRACTION_API`` parameters respectively (see :ref:`identification` for "
"details). To authorize the video face detection module, come up with a token "
"and specify it as ``VIDEO_DETECTOR_TOKEN``. This token will be being passed to "
"the ``videomanager-api`` jobs."

#: ../source/deploy.rst:158
msgid ""
"Если необходимо обеспечить безопасность данных, включите :ref:`SSL-шифрование "
"<https>`."
msgstr "If necessary, ensure data security by enabling :ref:`SSL <https>`."

#: ../source/deploy.rst:161
msgid ""
"При необходимости установите ``'IGNORE_UNMATCHED': True``, чтобы отключить "
"запись события в базу данных, если обнаруженное лицо отсутствует в списках "
"наблюдения (верификация дала отрицательный результат). Данную настройку "
"рекомендуется использовать при большом количестве посетителей. Пороговая "
"степень схожести при верификации лиц определяется параметром "
"``CONFIDENCE_THRESHOLD``."
msgstr ""
"If necessary, set ``’IGNORE_UNMATCHED’: True`` to disable logging events for "
"faces which have no match in the dossiers (negative verification result). "
"Enable this option if the system has to process a large number of faces. The "
"face similarity threshold for verification is defined by the "
"``CONFIDENCE_THRESHOLD`` parameter."

#: ../source/deploy.rst:166
msgid ""
"Рекомендуется отредактировать значение параметра ``MINIMUM_DOSSIER_QUALITY``. "
"Данный параметр определяет минимальное качество лица на фотографии в досье. "
"Если качество лица хуже минимального, пользователь не сможет загрузить такую "
"фотографию в досье. Прямые изображения лиц анфас считаются наиболее "
"качественными. Им соответствуют значения вблизи 0, как правило, отрицательные "
"(такие как -0.00067401276, например). Перевернутые лица и лица, повернутые под "
"большими углами, характеризуются отрицательным значениям от -5 и меньше. По "
"умолчанию ``'MINIMUM_DOSSIER_QUALITY': -2``, что соответствует среднему "
"качеству."
msgstr ""
"It is recommended to change the ``MINIMUM_DOSSIER_QUALITY`` default value. This "
"parameter determines the minimum quality of a face in a dossier photo. Photos "
"containing faces of worse quality will be rejected when uploading to a dossier. "
"Upright faces in frontal position are considered the best quality. They result "
"in values around 0, mostly negative (such as -0.00067401276, for example). "
"Inverted faces and large face angles are estimated with negative values some -5 "
"and less. By default, ``’MINIMUM_DOSSIER_QUALITY’: -2`` which is the average "
"quality."

#: ../source/deploy.rst:209
msgid ""
"При необходимости также отредактируйте файл конфигурации ``/etc/nginx/sites-"
"available/ffsecurity-nginx.conf``."
msgstr ""
"If necessary, edit the ``/etc/nginx/sites-available/ffsecurity-nginx.conf`` "
"configuration file as well."

#: ../source/deploy.rst:211
msgid ""
"Используя команду ``pwgen -sncy 50 1|tr \"'\" \".\"``, сгенерируйте ключ "
"подписи для шифрования сессии (используется :program:`Django`) и задайте его в "
"параметре ``SECRET_KEY``."
msgstr ""
"Generate a signature key for the session encryption (used by :program:`Django`) "
"by executing: ``pwgen -sncy 50 1|tr “’” “.”``. Specify this key as "
"``SECRET_KEY``."

#: ../source/deploy.rst:212
msgid ""
"Отключите сервер nginx, используемый по умолчанию, и добавьте в список "
"включенных серверов сервер ``ffsecurity``. Перезапустите nginx."
msgstr ""
"Disable the default nginx server and add the ``ffsecurity`` server to the list "
"of enabled servers. Restart nginx."

#: ../source/deploy.rst:222
msgid ""
"Перенесите схему базы данных из FindFace Security в :program:`PostgreSQL`, "
"создайте группы пользователей с :ref:`предустановленными правами <users>` и  "
"первого пользователя с правами администратора (т. н. Супер Администратора)."
msgstr ""
"Migrate the database architecture from FindFace Security to :program:"
"`PostgreSQL`, create user groups with :ref:`pre-defined rights <users>` and the "
"first user with administrator rights (a.k.a. Super Administrator)."

#: ../source/deploy.rst:227
msgid ""
"Отличие назначаемого администратора от Супер Администратора в том, что "
"последний не может лишиться прав администратора даже при смене роли."
msgstr "Super Administrator cannot be deprived of its rights, whatever the role."

#: ../source/deploy.rst:237
msgid "Запустите сервисы."
msgstr "Start the services."

#: ../source/deploy.rst:240
msgid ""
"Компонент ``ffsecurity`` включает в себя сервисы ``findface-security-proto`` "
"(отвечает за HTTP и web-сокет) и ``findface-security-worker`` (обеспечивает "
"взаимодействие остальных компонентов системы). Количество экземпляров "
"``findface-security-worker`` рассчитывается по формуле N=(количество ядер "
"CPU-1). Количество экземпляров задается после знака ``@``, например, ``findface-"
"security-worker@{1,2,3}`` для активации 3-х экземпляров."
msgstr ""
"The ``ffsecurity`` service includes ``findface-security-proto`` (provides HTTP "
"and web socket) and ``findface-security-worker`` (provides interaction of the "
"other system components). The number of the ``findface-security-worker`` "
"instances is calculated using the formula: N=(number of CPU cores-1). It is "
"specified after the ``@`` character, for example, ``findface-security-"
"worker@{1,2,3}`` for 3 instances."

#: ../source/deploy.rst:252
msgid "Установка модуля биометрической видео-идентификации"
msgstr "Video-Based Biometric Identification"

#: ../source/deploy.rst:254
msgid ""
"Установка модуля биометрической видео-идентификации (компонентов ``videomanager-"
"api``, ``video-worker`` и ``extraction-api``) выполняется следующим образом:"
msgstr ""
"To install the ``videomanager-api``, ``video-worker``, and ``extraction-api`` "
"components for video-based biometric identification, do the following:"

#: ../source/deploy.rst:256
msgid "Добавьте сервис ETCD в автозагрузку Ubuntu и запустите его."
msgstr "Enable the ETCD service autostart and launch the service:"

#: ../source/deploy.rst:262
msgid ""
"Установите компоненты ``videomanager-api``, ``video-worker`` и ``extraction-"
"api``."
msgstr "Install ``videomanager-api``, ``video-worker``, and ``extraction-api``."

#: ../source/deploy.rst:268
msgid ""
"Откройте для редактирования файл конфигурации ``/etc/findface-videomanager-api."
"conf``. В параметре ``router_url`` замените строку перед ``v0/frame``, указав "
"IP-адрес и порт компонента ``ffsecurity`` (задаются в параметре "
"``EXTERNAL_ADDRESS`` файла ``/etc/ffsecurity/config.py``). Компонент ``video-"
"worker`` будет отправлять обнаруженные лица по указанному адресу."
msgstr ""
"Open the ``/etc/findface-videomanager-api.conf`` configuration file for "
"editing. In the ``router_url`` parameter, substitute the string that goes "
"before ``v0/frame`` with the ``ffsecurity`` IP address and port (set as "
"``EXTERNAL_ADDRESS`` at ``/etc/ffsecurity/config.py``). The ``video-worker`` "
"component will be posting detected faces to the specified address."

#: ../source/deploy.rst:276
msgid ""
"В параметре ``ntls -> url`` укажите IP-адрес сервера лицензирования NTLS, если "
"NTLS установлен на удаленном физическом сервере."
msgstr ""
"In the ``ntls -> url`` parameter, specify the NTLS host IP address if the NTLS "
"host is remote."

#: ../source/deploy.rst:283
msgid "Откройте для редактирования файл конфигурации ``/etc/video-worker.ini``."
msgstr "Open the ``/etc/video-worker.ini`` configuration file for editing."

#: ../source/deploy.rst:289
msgid ""
"В параметре ``ntls-addr`` укажите IP-адрес сервера лицензирования NTLS, если "
"NTLS установлен на удаленном физическом сервере."
msgstr ""
"In the ``ntls-addr`` parameter, specify the NTLS host IP address if the NTLS "
"host is remote."

#: ../source/deploy.rst:295
msgid ""
"В параметре ``mgr-static`` укажите IP-адрес сервера с установленным компонентом "
"``videomanager-api``, у которого компонент ``video-worker`` будет запрашивать "
"настройки и список видеопотоков."
msgstr ""
"In the ``mgr-static`` parameter, specify the ``videomanager-api`` host IP "
"address, which provides ``video-worker`` with settings and the video stream "
"list."

#: ../source/deploy.rst:301
msgid ""
"В параметре ``capacity`` укажите максимальное количество видеопотоков, "
"обрабатываемых компонентом ``video-worker``."
msgstr ""
"In the ``capacity`` parameter, specify the maximum number of video streams to "
"be processed by ``video-worker``."

#: ../source/deploy.rst:307
msgid ""
"В файле конфигурации ``extraction-api`` включите опцию ``quality_estimator`` "
"для оценки качества лица."
msgstr ""
"In the ``extraction-api`` configuration file, enable the ``quality_estimator`` "
"to be able to estimate the face quality in a dossier."

#: ../source/deploy.rst:310
msgid ""
":ref:`Минимальное качество лица <quality>` на фотографии в досье задается "
"параметром ``MINIMUM_DOSSIER_QUALITY`` в файле конфигурации ``/etc/ffsecurity/"
"config.py``."
msgstr ""
"The :ref:`minimum face quality <quality>` in a dossier photo is set as "
"``MINIMUM_DOSSIER_QUALITY`` in ``/etc/ffsecurity/config.py``."

#: ../source/deploy.rst:318
msgid ""
"В файле конфигурации ``extraction-api`` выключите поиск моделей для "
"распознавания пола, возраста, эмоций и страны, передав пустые значения в "
"параметры ``gender``, ``age``, ``emotions`` и ``countries47``:"
msgstr ""
"In the ``extraction-api`` configuration file, disable searching for gender, "
"age, emotions, and country recognition models by passing empty values to the "
"``gender``, ``age`` and ``emotions`` and ``countries47`` parameters:"

#: ../source/deploy.rst:321
msgid ""
"Не удаляйте сами параметры, поскольку в этом случае будет выполняться поиск "
"моделей по умолчанию."
msgstr ""
"Do not remove the parameters themselves as in this case the system will be "
"searching for default models."

#: ../source/deploy.rst:331
msgid ""
"В результате файл конфигурации ``extraction-api`` должен выглядеть примерно "
"следующим образом:"
msgstr ""
"As a result, the ``extraction-api`` configuration file should look something "
"like this:"

#: ../source/deploy.rst:369
msgid ""
"Добавьте сервисы ``videomanager-api``, ``video-worker``, ``extraction-api`` в "
"автозагрузку Ubuntu и запустите их."
msgstr ""
"Enable the ``videomanager-api``, ``video-worker``, and ``extraction-api`` "
"autostart and launch the services."

#~ msgid "В этой главе:"
#~ msgstr "In this chapter:"

#~ msgid "Вставьте ключ Guardant в USB-порт."
#~ msgstr "Insert the Guardant dongle into a USB port."

#~ msgid ""
#~ "Откройте файл конфигурации ``/etc/ffsecurity/config.py``. В параметре "
#~ "``EXTERNAL_ADDRESS`` укажите актуальный внешний IP-адрес или URL сервера "
#~ "установки, по которому будет доступен веб-интерфейс. Придумайте токен для "
#~ "авторизации видеодетектора лиц в сервисе ``ffsecurity`` и укажите его в "
#~ "параметре ``VIDEO_DETECTOR_TOKEN`` (данный токен также нужно будет "
#~ "продублировать в :ref:`настройках видеодетектора <identification>`)."
#~ msgstr ""
#~ "Open the ``/etc/ffsecurity/config.py`` configuration file. In the "
#~ "``EXTERNAL_ADDRESS`` parameter , specify the host external IP address or URL "
#~ "to be used to access the web interface. To authorize the video face detector "
#~ "in the ``ffsecurity`` service, come up with a token and specify it as "
#~ "``VIDEO_DETECTOR_TOKEN`` (you have to specify the same token when :ref:"
#~ "`configuring the video face detector <identification>`)."

#~ msgid "Установите видеодетектор лиц."
#~ msgstr "Install the video face detector."

#~ msgid ""
#~ "Откройте файл конфигурации видеодетектора и отредактируйте в нем следующие "
#~ "настройки:"
#~ msgstr ""
#~ "Open the video face detector configuration file and edit the following "
#~ "settings:"

#~ msgid ""
#~ "Обратите внимание, что в параметре ``api-token`` нужно указать значение "
#~ "``VIDEO_DETECTOR_TOKEN`` из ``/etc/ffsecurity/config.py`` (см. :ref:`basic-"
#~ "deployment`)."
#~ msgstr ""
#~ "Note that the values of ``api-token`` and ``VIDEO_DETECTOR_TOKEN`` (``/etc/"
#~ "ffsecurity/config.py``) must be the same (see :ref:`basic-deployment`)."

#~ msgid ""
#~ "По умолчанию видеодетектор подбирает лучшее изображение лица в режиме "
#~ "реального времени (``realtime=1``). В этом режиме видеодетектор начинает "
#~ "отправлять в ``ffsecurity`` изображения лица сразу после его появления в "
#~ "поле зрения видеокамеры. Для более эффективного подбора лучшего изображения "
#~ "лица рекомендуется установить буферный режим (``realtime=0``). В буферном "
#~ "режиме видеодетектор использует меньший объем дискового пространства, "
#~ "поскольку для каждого лица отправляет в ``ffsecurity`` только одно "
#~ "изображение, но наивысшего качества."
#~ msgstr ""
#~ "By default, the video face detector selects the best face snapshot in the "
#~ "real-time mode (``realtime=1``). In this mode, the video face detector posts "
#~ "a face to ``ffsecurity`` immediately after it appears in a camera field of "
#~ "view. For more effective snapshot selection, we recommend you to set the "
#~ "offline mode (``realtime=0``). The offline mode is less storage intensive as "
#~ "it allows posting only one snapshot per face, but of the highest quality."

#~ msgid ""
#~ "Добавьте сервис ``fkvideo_detector`` в автозагрузку Ubuntu и запустите его. "
#~ "Убедитесь, что сервис активен."
#~ msgstr ""
#~ "Enable the ``fkvideo_detector`` service autostart and launch the service. "
#~ "Make sure that the service is active."

#~ msgid ""
#~ "Откройте файл конфигурации ``/etc/ffsecurity/config.py``. В параметре "
#~ "``EXTERNAL_ADDRESS`` укажите актуальный внешний IP-адрес или URL сервера "
#~ "установки, по которому будет доступен веб-интерфейс. Если компонент "
#~ "``videomanager-api`` будет установлен на удаленном сервере, укажите его IP-"
#~ "адрес в параметре ``VIDEO_MANAGER_ADDRESS`` (установка компонента описана в "
#~ "разделе см. :ref:`identification`)."
#~ msgstr ""
#~ "Open the ``/etc/ffsecurity/config.py`` configuration file. In the "
#~ "``EXTERNAL_ADDRESS`` parameter , specify the external IP address or URL that "
#~ "will be used to access the FindFace Security web interface. If "
#~ "``videomanager-api`` is installed on a remote host, specify its IP address "
#~ "as ``VIDEO_MANAGER_ADDRESS`` (see :ref:`identification` for details)."

#~ msgid "Установите компонент ``extraction-api``."
#~ msgstr "Install the ``extraction-api`` component."
