.. _bulk-upload:

Пакетная загрузка фотографий через консоль
======================================================

Помимо веб-интерфейса, для пакетной загрузки фотографий в базу данных досье можно использовать поставляемый вместе с FindFace Security скрипт на Python. Используйте скрипт, когда требуется загрузить большое количество фотографий (более 10000).

Выполните следующие действия:

#. Подготовьте CSV- или TSV-файл со списком фотографий и метаданными. 

   .. important::
      В качестве источника метаданных файл должен иметь следующий формат: ``путь к фотографии | метаданные``. 

   Для подготовки TSV-файла можно использовать скрипт, аналогичный :download:`данному <_scripts/tsv_builder.py>` или команду ``find``. Использование скрипта предпочтительнее, поскольку создание файла с большим количеством изображений с помощью ``find`` может занять продолжительное время (до нескольких часов для 1 миллиона фотографий).

   .. note::
      Как скрипт, так и команда в примерах создают файл ``images.tsv`` с данными в формате ``полный путь к файлу с фотографией | метаданные``. В качестве метаданных будет создана строка с именем файла.

   Для запуска скрипта на создание TSV-файла со списком фотографий из указанной папки (``/home/user/25_celeb/`` в примере) выполните следующую команду:  

   .. code::

      python3 tsv_builder.py /home/user/25_celeb/

   Пример использования команды ``find``:

   .. code::

      find ~/user/25_celeb\ dataset -type f -iname '*g' | while read x; do printf "%s\t%s\n" "$x" "$(basename "${x%.*}")"; done > images.tsv


#. Создайте файл задания (job-файл) из CSV- или TSV-файла, используя метод ``add`` скрипта (``uploader.py`` в примере). 

   .. code::

      python3 uploader.py add images.tsv

   Опции ``add``:

   * ``--format``: формат файла, по умолчанию ``tsv``,
   * ``--delimiter``: используемый разделитель, по умолчанию ``i\'s "\\t"`` для TSV-файла, ``","`` для формата CSV.

   .. note::
      Файл job представляет собой sqlite-базу, которая может быть открыта в консоли :program:`sqlite3`.
 
#. Выполните задание job, используя метод ``run`` скрипта.

   .. code::

      python3 uploader.py run --dossier-lists 2 --api http://127.0.0.1:80 --user admin --password password

   Опции ``run``:

   * ``--parallel``: количество потоков загрузки фотографий, по умолчанию 10. Чем больше потоков, тем быстрее будет завершена загрузка, однако также потребуется и большее количество ресурсов.
   * ``--api``: URL API компонента ``findface-security``, по умолчанию ``http://127.0.0.1:80/``.
   * ``--user``: имя пользователя.
   * ``--password``: пароль.
   * ``--dossier-lists``: перечень разделенных запятой id списков наблюдения, в которые нужно добавить фотографии.
   * ``--failed``: в случае неудачи при обработке job-файла исправьте ошибку и повторите попытку с данной опцией.




